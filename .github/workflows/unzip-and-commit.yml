name: Unzip repo ZIP and commit

on:
  workflow_dispatch:
    inputs:
      zip_path:
        description: 'Ruta o nombre del ZIP en el repo (p.ej. BarrileteCosmicTV.zip)'
        required: true
        default: 'BarrileteCosmicTV.zip'
      dest_dir:
        description: 'Carpeta destino: "." para ra√≠z, o nombre de carpeta'
        required: true
        default: 'BarrileteCosmicTV'
      remove_zip:
        description: 'Borrar el ZIP luego de extraer (yes/no)'
        required: true
        default: 'yes'

permissions:
  contents: write  # necesario para pushear commits

jobs:
  unzip_and_commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mostrar contenidos del repo (debug)
        run: ls -la && echo "---" && find . -maxdepth 3 -type f -printf "%p\n"

      - name: Resolver ruta real del ZIP
        id: resolve_zip
        shell: bash
        run: |
          set -euo pipefail
          INPUT="${{ github.event.inputs.zip_path }}"

          # Si existe exactamente como lo pasaron, usarlo
          if [ -f "$INPUT" ]; then
            echo "zip_path=$INPUT" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Probar en ra√≠z con solo el nombre base
          base="$(basename "$INPUT")"
          if [ -f "./$base" ]; then
            echo "zip_path=./$base" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Buscar en todo el repo por nombre exacto (case sensitive)
          found="$(find . -type f -name "$base" | head -n 1 || true)"
          if [ -n "$found" ]; then
            echo "zip_path=$found" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "‚ùå No se encontr√≥ el ZIP '$INPUT' (ni '$base') en el repo."
          exit 1

      - name: Instalar unzip (por si acaso)
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Extraer ZIP
        id: unzip
        shell: bash
        run: |
          set -euo pipefail
          ZIP="${{ steps.resolve_zip.outputs.zip_path }}"
          DEST="${{ github.event.inputs.dest_dir }}"

          echo "ZIP a extraer: $ZIP"
          echo "Destino solicitado: $DEST"

          if [ "$DEST" = "." ]; then
            # Extraer en la ra√≠z del repo
            unzip -o "$ZIP" -d .
          else
            mkdir -p "$DEST"
            unzip -o "$ZIP" -d "$DEST"
          fi

          echo "‚úÖ Extracci√≥n finalizada."

      - name: (Opcional) Borrar ZIP original
        if: ${{ success() && github.event.inputs.remove_zip == 'yes' }}
        shell: bash
        run: |
          set -e
          ZIP="${{ steps.resolve_zip.outputs.zip_path }}"
          rm -f "$ZIP" || true
          echo "üóëÔ∏è ZIP eliminado."

      - name: Commit & push si hubo cambios
        shell: bash
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: unzip '${{ github.event.inputs.zip_path }}' into '${{ github.event.inputs.dest_dir }}' (remove_zip=${{ github.event.inputs.remove_zip }})"
            git push
            echo "üöÄ Cambios pusheados."
          else
            echo "‚ÑπÔ∏è No hay cambios para commitear."
          fi
